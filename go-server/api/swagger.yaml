---
swagger: "2.0"
info:
  description: "This is a user API"
  version: "1.0.0"
  title: "Simple user API"
  contact:
    email: "kollisreekanth@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/ADP9529/user/1.0.0"
tags:
- name: "HPE User"
  description: "Secured User calls"
schemes:
- "https"
paths:
  /user:
    get:
      tags:
      - "HPE User"
      summary: "searches user"
      description: "By passing in the appropriate id, you can search for\navailable\
        \ user in the system\n"
      operationId: "searchUser"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "pass an id for looking up inventory"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "skip"
        in: "query"
        description: "number of records to skip for pagination"
        required: false
        type: "integer"
        minimum: 0
        format: "int32"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "maximum number of records to return"
        required: false
        type: "integer"
        maximum: 50.0
        minimum: 0
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        "400":
          description: "bad input parameter"
    post:
      tags:
      - "HPE User"
      summary: "adds a user item"
      description: "Adds a user to the system"
      operationId: "addUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "user"
        description: "User to add"
        required: false
        schema:
          $ref: "#/definitions/User"
        x-exportParamName: "User"
      responses:
        "201":
          description: "user created"
        "400":
          description: "invalid input, object invalid"
        "409":
          description: "an existing user already exists"
definitions:
  User:
    type: "object"
    required:
    - "createdDate"
    - "id"
    - "password"
    - "username"
    properties:
      id:
        type: "string"
        format: "uuid"
        example: "d290f1ee-6c54-4b01-90e6-d701748f0851"
      username:
        type: "string"
        example: "User1"
      password:
        type: "string"
        example: "password"
      test:
        type: "string"
        example: "test"
      createdDate:
        type: "string"
        format: "date-time"
        example: "2016-08-29T09:12:33.001+0000"
    example:
      password: "password"
      createdDate: "2016-08-29T09:12:33.001+0000"
      test: "test"
      id: "d290f1ee-6c54-4b01-90e6-d701748f0851"
      username: "User1"
